(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{571:function(t,_,v){"use strict";v.r(_);var a=v(13),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"🐅计算机网络"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🐅计算机网络"}},[t._v("#")]),t._v(" 🐅计算机网络")]),t._v(" "),v("h2",{attrs:{id:"计网知识体系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计网知识体系"}},[t._v("#")]),t._v(" 计网知识体系")]),t._v(" "),v("ul",[v("li",[t._v("HTTP协议\n"),v("ul",[v("li",[t._v("报文头部字段")]),t._v(" "),v("li",[t._v("（响应报文头部的）状态码")]),t._v(" "),v("li",[t._v("缓存问题\n"),v("ul",[v("li",[t._v("强缓存")]),t._v(" "),v("li",[t._v("协商缓存")])])])])]),t._v(" "),v("li",[t._v("HTTPS协议\n"),v("ul",[v("li",[t._v("对称加密、非对称加密的概念")]),t._v(" "),v("li",[t._v("数字证书的用途")]),t._v(" "),v("li",[t._v("SSH密钥在非对称加密中的作用、")]),t._v(" "),v("li",[t._v("中间人攻击")])])]),t._v(" "),v("li",[t._v("TCP协议\n"),v("ul",[v("li",[t._v("三次握手")]),t._v(" "),v("li",[t._v("四次挥手")])])]),t._v(" "),v("li",[t._v("IP协议")]),t._v(" "),v("li",[t._v("跨域问题\n"),v("ul",[v("li",[t._v("相关报文头部字段")])])])]),t._v(" "),v("h2",{attrs:{id:"计网学习资源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计网学习资源"}},[t._v("#")]),t._v(" 计网学习资源")]),t._v(" "),v("blockquote",[v("p",[t._v("推荐的一些超棒的资源！")]),t._v(" "),v("ul",[v("li",[v("p",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/W94ZUxGQHGDqBwIXHHD6jA",target:"_blank",rel:"noopener noreferrer"}},[t._v("进阶必备的网络基础"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[t._v("小林Coding的"),v("a",{attrs:{href:"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxODAzNDg4NQ==&action=getalbum&album_id=1337204681134751744&scene=173&from_msgid=2247483971&from_itemidx=1&count=3&nolastread=1#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("《图解网络》"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://827652549.github.io/my-book/#/network/http",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端面试精粹"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://github.com/biaochenxuying/blog/blob/master/interview/fe-interview.md#%E7%9B%AE%E5%BD%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端硬核面试专题"),v("OutboundLink")],1),t._v(" "),v("a",{attrs:{href:"https://github.com/biaochenxuying/blog/blob/master/interview/fe-interview.md#10-https",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP篇"),v("OutboundLink")],1),t._v("（作者这里笔误写成HTTPS了 其实讲的都是HTTP中的内容）")])]),t._v(" "),v("li",[v("p",[t._v("《图解HTTP》")])]),t._v(" "),v("li",[v("p",[t._v("《网络是如何连接的》")])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://cloud.tencent.com/developer/section/1189849",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP - 指南：基础 | Guides: Basics - Basics of HTTP - 开发者手册 - 云+社区 - 腾讯云（有RFC文档翻版本）"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/252251279?msclkid=05375077ab7111eca44b355c3e03ecc3",target:"_blank",rel:"noopener noreferrer"}},[t._v("超高频面试题（简短易懂）"),v("OutboundLink")],1)])])])]),t._v(" "),v("blockquote",[v("p",[t._v("计网应知应会")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("7层网络协议")])]),t._v(" "),v("li",[v("p",[t._v("HTTP协议是重点")]),t._v(" "),v("ul",[v("li",[t._v("DNS解析")])])]),t._v(" "),v("li",[v("p",[t._v("传输层相关（TCP、UDP）")])]),t._v(" "),v("li",[v("p",[t._v("网络层相关（IP地址、IPV4、IPV6、子网掩码）")])])])]),t._v(" "),v("h2",{attrs:{id:"网络模型一览"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络模型一览"}},[t._v("#")]),t._v(" 网络模型一览")]),t._v(" "),v("blockquote",[v("p",[t._v("工欲善其事，必先利其器。学习计算机网络之前，让我们先对其有个大致的了解")]),t._v(" "),v("p",[t._v("《图解网络》")])]),t._v(" "),v("p",[t._v("主要掌握的内容为TCP/IP网络模型")]),t._v(" "),v("p",[t._v("OSI参考模型做一个了解即可~")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152227665.png",alt:"image-20210801231826185"}})]),t._v(" "),v("blockquote",[v("p",[t._v("为了使得多种设备可以通过网络相互通信")]),t._v(" "),v("p",[t._v("为了解决各种设备在网络互联中的兼容性问题")]),t._v(" "),v("p",[t._v("国际标准化组织制定了 "),v("strong",[t._v("开放式系统互联通信参考模型")]),t._v(" 也就是OSI网络模型")]),t._v(" "),v("p",[t._v("这七层的OSI模型 每层负责的职能不同~")]),t._v(" "),v("ul",[v("li",[t._v("应用层 负责给应用程序提供统一的接口")]),t._v(" "),v("li",[t._v("表示层 负责把数据转换成兼容另一个系统能识别的格式")]),t._v(" "),v("li",[t._v("会话层 负责建立、管理、终止 表示层实体之间的通信对话")]),t._v(" "),v("li",[v("strong",[t._v("传输层")]),t._v(" 负责端到端的数据传输")]),t._v(" "),v("li",[v("strong",[t._v("网络层")]),t._v(" 负责数据的路由、转发、分片")]),t._v(" "),v("li",[t._v("数据链路层 负责数据的封帧和差错检测 以及MAC寻址")]),t._v(" "),v("li",[t._v("物理层 负责在物理网络中传输数据帧")])]),t._v(" "),v("blockquote",[v("p",[t._v("由于 OSI 模型实在太复杂，提出的也只是概念理论上的分层，并"),v("strong",[t._v("没有提供具体的实现⽅案")]),t._v("。")]),t._v(" "),v("p",[t._v("事实上，我们⽐较常⻅，也⽐较实⽤的是四层模型，即 TCP/IP 网络模型，Linux 系统正是按照这套网络模型来实现网络协议栈的。")])])]),t._v(" "),v("p",[t._v("这个经典的TCP/IP模型共有4层 我们需要熟练掌握——")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("应用层")]),t._v(" "),v("ul",[v("li",[t._v("HTTP HTTPS——推荐"),v("code",[t._v("小林Coding")]),t._v("的这篇文章~"),v("a",{attrs:{href:"https://mp.weixin.qq.com/s/bUy220-ect00N4gnO0697A",target:"_blank",rel:"noopener noreferrer"}},[t._v("硬核！30 张图解 HTTP 常见的面试题"),v("OutboundLink")],1)])])]),t._v(" "),v("li",[v("p",[t._v("传输层")]),t._v(" "),v("ul",[v("li",[t._v("TCP")]),t._v(" "),v("li",[t._v("UDP")])])]),t._v(" "),v("li",[v("p",[t._v("网络层")]),t._v(" "),v("ul",[v("li",[t._v("IPV4")]),t._v(" "),v("li",[t._v("简单了解IPV6")])])])]),t._v(" "),v("p",[t._v("我们只需要简单了解——")]),t._v(" "),v("ul",[v("li",[t._v("网络接口层（数据链路层和物理层）")])]),t._v(" "),v("blockquote",[v("p",[t._v("下面对于"),v("u",[t._v("网络模型总览")]),t._v("的内容来自小林Coding的《图解网络》（个人进行了一些细节上的理解+重点的标注）")])]),t._v(" "),v("p",[t._v("对于同⼀台设备上的进程间通信，有很多种⽅式，⽐如有管道、消息队列、共享内存、信号等⽅式，⽽对于不同设备上的进程间通信，就需要网络通信，⽽设备是多样性的，所以要兼容多种多样的设备，就"),v("strong",[t._v("协商出了⼀套通用的网络协议")]),t._v("（《趣谈网络协议》作者形象地称其为“打破世界的通天塔（阻碍各国进行交流的一个桎梏）的网络协议”）")]),t._v(" "),v("p",[t._v("这个网络协议是分层的，"),v("strong",[t._v("每⼀层都有各自的作用和职责")]),t._v("，接下来就分别对每⼀层进⾏介绍。")]),t._v(" "),v("h4",{attrs:{id:"【1】应用层-application-layer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【1】应用层-application-layer"}},[t._v("#")]),t._v(" 【1】应用层（Application Layer）")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("是最上层的，也是我们能直接接触到那层")])]),t._v(" "),v("li",[v("p",[t._v("我们电脑或⼿机使⽤的应⽤软件都是在应⽤层实现的")])]),t._v(" "),v("li",[v("p",[t._v("当两个不同设备的应⽤"),v("strong",[t._v("需要通信的时候，应用就把应用数据传给下⼀层，也就是传输层")])])]),t._v(" "),v("li",[v("p",[t._v("所以，应⽤层只需要"),v("strong",[t._v("专注于为用户提供应用功能，不用去关心数据是如何传输的")]),t._v("，就类似于，我们寄快递的时候， 只需要把包裹交给快递员，由他负责运输快递，我们不需要关心快递是如何被运输的")])]),t._v(" "),v("li",[v("p",[t._v("⽽且应⽤层是⼯作在操作系统中的"),v("strong",[t._v("用户态")]),t._v("，传输层及以下的⼯作在"),v("strong",[t._v("内核态")])])])]),t._v(" "),v("h4",{attrs:{id:"【2】传输层-transport-layer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【2】传输层-transport-layer"}},[t._v("#")]),t._v(" 【2】传输层（Transport Layer）")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("应用层的数据包会传给传输层")])])]),t._v(" "),v("li",[v("p",[t._v("传输层是"),v("strong",[t._v("为应用层提供网络支持")]),t._v("的")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152227350.png",alt:"image-20210803163840067"}})]),t._v(" "),v("ul",[v("li",[t._v("传输层会有两个传输协议 分别是——\n"),v("ul",[v("li",[t._v("TCP")]),t._v(" "),v("li",[t._v("UDP")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("那么TCP UDP有什么区别呢😏😏😏"),v("img",{attrs:{src:"https://pic3.zhimg.com/80/v2-b32ce00dca8c40f83212f6a256e04e6e_720w.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("最主要的区别就是——TCP更可靠！但也同时"),v("strong",[t._v("损失了实时性")]),t._v("，"),v("strong",[t._v("传输效率低")]),t._v("了一些~")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("TCP的全称叫传输层控制协议（Transmission Control Protocol），⼤部分应⽤使⽤的正是 TCP 传输层协议")]),t._v(" "),v("ul",[v("li",[t._v("比如 HTTP 应⽤层协议使用的就是TCP传输层协议")]),t._v(" "),v("li",[t._v("TCP 相"),v("strong",[t._v("⽐ UDP 多了很多特性")]),t._v("，⽐如流量控制、超时重传、拥塞控制等 这些都是为了保证数据包能"),v("strong",[t._v("可靠")]),t._v("地传输给对方")])])]),t._v(" "),v("li",[v("p",[t._v("UDP 就相对很简单，简单到只负责发送数据包，不保证数据包是否能抵达对⽅")]),t._v(" "),v("ul",[v("li",[t._v("但它实时性相对TCP更好，传输效率 也⾼")]),t._v(" "),v("li",[t._v("当然，UDP "),v("strong",[t._v("也可以实现可靠传输")]),t._v("，把 TCP 的特性在应⽤层上实现就可以")]),t._v(" "),v("li",[t._v("不过要实现⼀个商⽤的可靠 UDP 传输协议，也不是⼀件简单的事情")])])]),t._v(" "),v("li",[v("p",[t._v("应⽤需要传输的数据可能会⾮常⼤，如果直接传输就不好控制，因此当传输层的数据包大小超过 MSS（TCP 最⼤报⽂段⻓度） ，就要将数据包"),v("strong",[t._v("分块")]),t._v("（传输层蛮重要的一个特性~），这样即使中途有⼀个分块丢失或损坏了，只需要᯿新这⼀个分块，⽽不⽤重新发送整个数据包。")])]),t._v(" "),v("li",[v("p",[t._v("在 TCP 协议中，我们把每个分块称为⼀个 TCP 段（TCP Segment）")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152227178.png",alt:"image-20210803164412807"}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("当设备作为接收方时，传输层则要负责"),v("strong",[t._v("把数据包传给应用")]),t._v("，但是⼀台设备上可能会有很多应⽤在接收或者传输数据，因此需要⽤⼀个编号"),v("strong",[t._v("将应用区分开来")]),t._v("，这个编号就是端口")]),t._v(" "),v("ul",[v("li",[t._v("比如 80 端⼝通常是 Web 服务器⽤的")]),t._v(" "),v("li",[t._v("22 端⼝通常是远程登录服务器⽤的")])])]),t._v(" "),v("li",[v("p",[t._v("⽽对于浏览器（客户端）中的每个标签栏都是⼀个独⽴的进程，"),v("strong",[t._v("操作系统会为这些进程分配临时的端⼝号")])])]),t._v(" "),v("li",[v("p",[t._v("由于传输层的报⽂中会携带端⼝号，因此接收⽅可以识别出该报⽂是发送给哪个应⽤")])])]),t._v(" "),v("h4",{attrs:{id:"【3】网络层-internet-layer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【3】网络层-internet-layer"}},[t._v("#")]),t._v(" 【3】网络层（Internet Layer）")]),t._v(" "),v("blockquote",[v("p",[t._v("寻址 与 路由")]),t._v(" "),v("p",[t._v("IP 协议的寻址作⽤是告诉我们去往下⼀个⽬的地该朝哪个⽅向⾛，路由则是根据「下⼀个⽬的地」选择路径")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("寻址更像在导航，路由更像在操作方向盘")])])])]),t._v(" "),v("ul",[v("li",[t._v("可能⼤家刚接触"),v("strong",[t._v("传输层")]),t._v("的时候，会认为它负责将数据从⼀个设备传输到另⼀个设备，事实上它"),v("strong",[t._v("并不负责")]),t._v(" "),v("ul",[v("li",[t._v("这是网络层的活儿！！")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("实际场景中的网络环节是错综复杂的，中间有各种各样的线路和分叉路⼝，如果⼀个设备的数据要传输给另⼀个设备，就需要"),v("strong",[t._v("在各种各样的路径和节点进⾏选择")]),t._v("，⽽传输层的设计理念是简单、⾼效、专注，如果传输层还负责这⼀块功能就有点违背设计原则了")])]),t._v(" "),v("ul",[v("li",[t._v("也就是说，我们不希望传输层协议处理太多的事情，只需要服务好应⽤即可，让其作为应⽤间数据传输的媒介，帮助实现应⽤到应⽤的通信，⽽"),v("strong",[t._v("实际的传输功能就交给")]),t._v("下⼀层，也就是"),v("strong",[t._v("网络层")]),t._v("（Internet Layer）")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152232255.png",alt:"image-20210803173110016"}})]),t._v(" "),v("ul",[v("li",[t._v("网络层最常使⽤的是 IP 协议（Internet Protocol），IP 协议会将传输层的报⽂作为数据部分，再加上 IP 包头组装 成 IP 报⽂")]),t._v(" "),v("li",[t._v("如果 IP 报⽂大小超过 MTU（以太网中⼀般为 1500 字节）就会==再次进⾏分⽚==，得到⼀个即将发送到网络的 IP 报⽂")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152232461.png",alt:"image-20210803173154786"}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("网络层负责将数据从⼀个设备传输到另⼀个设备，世界上那么多设备，⼜该如何找到对⽅呢？因此，网络层需要有 区分设备的编号")])]),t._v(" "),v("li",[v("p",[t._v("我们⼀般⽤ IP 地址给设备进⾏编号，对于 IPv4 协议， IP 地址共 32 位，分成了四段，每段是 8 位。只有⼀个单纯 的 IP 地址虽然做到了区分设备，但是寻址起来就特别麻烦，全世界那么多台设备，难道⼀个⼀个去匹配？这显然不科学。 因此，需要将 IP 地址分成两种意义")]),t._v(" "),v("ul",[v("li",[t._v("⼀个是==网络号==，负责标识该 IP 地址是属于哪个⼦网的")]),t._v(" "),v("li",[t._v("⼀个是==主机号==，负责标识同⼀⼦网下的不同主机")])])]),t._v(" "),v("li",[v("p",[t._v("怎么分的呢？这需要"),v("strong",[t._v("配合子网掩码才能算出 IP 地址 的网络号和主机号")]),t._v("。那么在寻址的过程中，先匹配到相同的网络号，才会去找对应的主机")])]),t._v(" "),v("li",[v("p",[t._v("除了"),v("strong",[t._v("寻址")]),t._v("能力， IP 协议还有另⼀个重要的能力就是"),v("strong",[t._v("路由")])]),t._v(" "),v("p",[t._v("实际场景中，两台设备并不是⽤⼀条网线连接起来的， ⽽是通过很多网关、路由器、交换机等众多网络设备连接起来的")]),t._v(" "),v("p",[t._v("那么就会形成很多条网络的路径，因此"),v("strong",[t._v("当数据包 到达⼀个网络节点，就需要通过算法决定下⼀步⾛哪条路径")])])]),t._v(" "),v("li",[v("p",[t._v("所以，IP 协议的==寻址作⽤是告诉我们去往下⼀个⽬的地该朝哪个⽅向⾛==，==路由则是根据「下⼀个⽬的地」选择路径==")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("寻址更像在导航，路由更像在操作方向盘")])])])])]),t._v(" "),v("h4",{attrs:{id:"【4】数据链路层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【4】数据链路层"}},[t._v("#")]),t._v(" 【4】数据链路层")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("实际场景中，网络并不是⼀个整体，⽐如你家和我家就不属于⼀个网络，所以数据不仅可以在同⼀个网络中设备间进行传输，也可以跨网络进⾏传输")])]),t._v(" "),v("li",[v("p",[t._v("⼀旦数据需要跨网络传输，就需要有⼀个设备同时在两个网络当中，这个设备⼀般是路由器，"),v("strong",[t._v("路由器可以通过路由表计算出下⼀个要去的 IP 地址")])])]),t._v(" "),v("li",[v("p",[t._v("那问题来了，路由器怎么知道这个 IP 地址是哪个设备的呢？")]),t._v(" "),v("ul",[v("li",[t._v("于是，就需要有⼀个专⻔的层来"),v("strong",[t._v("标识网络中的设备")]),t._v("，让数据在⼀个链路中传输，这就是"),v("strong",[t._v("数据链路层")]),t._v("（Data Link Layer），它主要"),v("strong",[t._v("为网络层提供链路级别传输的服务")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152232173.png",alt:"image-20210803174006669"}})])]),t._v(" "),v("li",[v("p",[t._v("每⼀台设备的网卡都会有⼀个 MAC 地址，它就是⽤来唯⼀标识设备的。路由器计算出了下⼀个⽬的地 IP 地址，再通过 ARP 协议"),v("strong",[t._v("找到该⽬的地的 MAC 地址，这样就知道这个 IP 地址是哪个设备的了")])])])]),t._v(" "),v("h4",{attrs:{id:"【5】物理层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【5】物理层"}},[t._v("#")]),t._v(" 【5】物理层")]),t._v(" "),v("p",[t._v("当数据准备要从设备发送到网络时，需要"),v("strong",[t._v("把数据包转换成电信号，让其可以在物理介质中传输")]),t._v("，这⼀层就是物理层 （Physical Layer），它"),v("strong",[t._v("主要是为数据链路层提供⼆进制传输的服务")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/202204152232542.png",alt:"image-20210803174144375"}})]),t._v(" "),v("h4",{attrs:{id:"【6】tcp-ip网络模型小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【6】tcp-ip网络模型小结"}},[t._v("#")]),t._v(" 【6】TCP/IP网络模型小结")]),t._v(" "),v("p",[t._v("综上所述，网络协议通常是由上到下，分成 5 层没，分别是应⽤层，传输层，网络层，数据链路层和物理层")]),t._v(" "),v("p",[t._v("一句话概括下这几个层")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("应用层 "),v("strong",[t._v("专注于为⽤户提供应⽤功能，不⽤去关⼼数据是如何传输的。")])])]),t._v(" "),v("li",[v("p",[t._v("传输层 "),v("strong",[t._v("应用层的数据包会传给传输层 也就是说 传输层是为应用层提供网络支持的。")])])]),t._v(" "),v("li",[v("p",[t._v("网络层 "),v("strong",[t._v("负责将数据从⼀个设备传输到另⼀个设备")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111171141510.png",alt:"image-20210803174554613"}})])]),t._v(" "),v("li",[v("p",[t._v("数据链路层 "),v("strong",[t._v("为网络层提供链路级别传输的服务")])])]),t._v(" "),v("li",[v("p",[t._v("物理层 "),v("strong",[t._v("把数据包转换成电信号，让其可以在物理介质中传输")])])])]),t._v(" "),v("p",[t._v("完整的关系如下")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111171141769.png",alt:"image-20210803174629200"}})]),t._v(" "),v("blockquote",[v("p",[t._v("这里没有听懂也木有关系啦~")]),t._v(" "),v("p",[t._v("经典面试题“输入网址到网页显示 期间发生了什么？”会从一个网络包的心路历程开始说起，带我们了解这几个层是如何分工协作将数据包从客户端/服务端送到服务端/客户端的！")]),t._v(" "),v("p",[t._v("这部分内容我们在下面的“计算机网络宏观概念”中会提到！")])]),t._v(" "),v("h2",{attrs:{id:"http相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http相关"}},[t._v("#")]),t._v(" HTTP相关")]),t._v(" "),v("h3",{attrs:{id:"_4g切换为wifi的过程中发生了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4g切换为wifi的过程中发生了什么"}},[t._v("#")]),t._v(" 4G切换为WIFI的过程中发生了什么？")]),t._v(" "),v("blockquote",[v("p",[t._v("来自 小林Coding 的图解网络")])]),t._v(" "),v("ul",[v("li",[t._v("4G切"),v("code",[t._v("wifi")]),t._v(" "),v("ul",[v("li",[t._v("基于TCP传输协议的HTTP1 HTTP2\n"),v("ul",[v("li",[t._v("TCP协议通过四元组确定一条TCP连接 切"),v("code",[t._v("wifi")]),t._v("时 源"),v("code",[t._v("ip")]),t._v("地址会变化 需要先断开TCP连接——卡！\n"),v("ul",[v("li",[t._v("源IP 源端口 目的IP 目的端口")])])])])]),t._v(" "),v("li",[t._v("基于QUIC+UDP传输协议的HTTP3.0\n"),v("ul",[v("li",[t._v("QUIC协议通过"),v("strong",[t._v("连接ID")]),t._v("来标记通信的两个端点（客户端、服务端） 即使切"),v("code",[t._v("wifi")]),t._v(" 也不会发生TCP重连（发生了 "),v("strong",[t._v("连接迁移")]),t._v("）")])])]),t._v(" "),v("li",[v("img",{attrs:{src:"https://raw.githubusercontent.com/FangzhouSu/blog-image/main/UQ_50%60TK%7BGZH%7DR2WT%24%7BIPXR.jpg",alt:"img"}})])])])]),t._v(" "),v("h3",{attrs:{id:"http报文首部"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http报文首部"}},[t._v("#")]),t._v(" HTTP报文首部")]),t._v(" "),v("blockquote",[v("p",[t._v("更多具体细节可以读一下《图解HTTP》！讲得可详细了~")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101027457.png",alt:"image-20211110102718109"}})]),t._v(" "),v("h5",{attrs:{id:"通用首部字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通用首部字段"}},[t._v("#")]),t._v(" 通用首部字段")]),t._v(" "),v("p",[t._v("通用首部字段是指，请求报文和响应报文双方"),v("strong",[t._v("都会使用的首部")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101127702.png",alt:"image-20211110112720637"}})]),t._v(" "),v("h5",{attrs:{id:"请求首部字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求首部字段"}},[t._v("#")]),t._v(" 请求首部字段")]),t._v(" "),v("p",[t._v("请求首部字段是从客户端往服务器端"),v("strong",[t._v("发送请求报文中所使用的字段")]),t._v("， 用于"),v("strong",[t._v("补充")]),t._v("请求的附加信息、客户端信息、对响应内容相关的优先级等内容。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101127565.png",alt:"image-20211110112742415"}})]),t._v(" "),v("h5",{attrs:{id:"响应首部字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#响应首部字段"}},[t._v("#")]),t._v(" 响应首部字段")]),t._v(" "),v("p",[t._v("响应首部字段是由服务器端向客户端返回响应报文中所使用的字段， 用于"),v("strong",[t._v("补充")]),t._v("响应的附加信息、服务器信息，以及对客户端的附加要求等信息。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101127907.png",alt:"image-20211110112751761"}})]),t._v(" "),v("h5",{attrs:{id:"实体首部字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实体首部字段"}},[t._v("#")]),t._v(" 实体首部字段")]),t._v(" "),v("p",[t._v("实体首部字段是包含在请求报文和响应报文中的"),v("strong",[t._v("实体部分所使用的首部")]),t._v("，用于"),v("strong",[t._v("补充")]),t._v("内容的更新时间等与实体相关的信息。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101127448.png",alt:"image-20211110112758301"}})]),t._v(" "),v("h5",{attrs:{id:"为cookie服务的首部字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为cookie服务的首部字段"}},[t._v("#")]),t._v(" 为Cookie服务的首部字段")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101130537.png",alt:"image-20211110113059259"}})]),t._v(" "),v("p",[t._v("两个很重要的首部字段！！")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101131098.png",alt:"image-20211110113114974"}})]),t._v(" "),v("p",[t._v("简单解析")]),t._v(" "),v("ul",[v("li",[t._v("服务器发给客户端的报文中携带的Set-Cookie字段")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101131989.png",alt:"image-20211110113140853"}})]),t._v(" "),v("ul",[v("li",[t._v("客户端发给服务端的报文中携带的Cookie字段")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111101132222.png",alt:"image-20211110113242041"}})]),t._v(" "),v("h3",{attrs:{id:"http1优化-强缓存-协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http1优化-强缓存-协商缓存"}},[t._v("#")]),t._v(" http1优化——强缓存&协商缓存")]),t._v(" "),v("blockquote",[v("p",[t._v("《图解网络》")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/book/6844733750048210957/section/6844733750106931214",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化原理与实践 - 修言 - 掘金课程"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[t._v("强缓存策略和协商缓存策略")]),t._v(" "),v("blockquote",[v("p",[t._v("字节二面原题orz 当时听都没听说过")]),t._v(" "),v("p",[t._v("”啊？强缓存 对应的是弱缓存么？😫“  ”对应的是协商缓存😑😑“")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("在缓存命中时"),v("strong",[t._v("都会直接使用本地的缓存副本")]),t._v("；")])]),t._v(" "),v("li",[v("p",[t._v("它们缓存不命中时，都会"),v("strong",[t._v("向服务器发送请求来获取资源")]),t._v("。在实际的缓存机制中，强缓存策略和协商缓存策略是一起"),v("strong",[t._v("合作使用")]),t._v("的。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("浏览器")]),t._v("首先会根据请求的信息判断"),v("strong",[t._v("强缓存")]),t._v("是否命中，【1】如果命中则直接使用本地资源的副本。如果不命中则【2】根据头信息向服务器发起请求，使用协商缓存——")]),t._v(" "),v("li",[t._v("【3】如果"),v("strong",[t._v("协商缓存")]),t._v("命中的话（资源没有过期，服务器响应报文状态码为304 临时重定向），则"),v("strong",[t._v("服务器")]),t._v("不返回资源，浏览器直接使用本地资源的副本，如果协商缓存不命中，则服务器返回最新的资源给浏览器。")])])])])]),t._v(" "),v("h4",{attrs:{id:"缓存技术实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存技术实现"}},[t._v("#")]),t._v(" 缓存技术实现")]),t._v(" "),v("blockquote",[v("p",[t._v("对于一些具有重复性的HTTP请求 比如"),v("strong",[t._v("每次请求得到的数据都是一样的")]),t._v(" 我们就可以把这对"),v("strong",[t._v("请求-响应")]),t._v("的数据都缓存在本地 那么下次就直接读取本地的数据 不必再通过网络获取服务器的响应了~")])]),t._v(" "),v("p",[t._v("这样的话HTTP/1.1的性能肯定可以获得肉眼可见的提升！")]),t._v(" "),v("p",[t._v("总结一下上面所说的 避免发送HTTP请求的方法 就是通过==缓存技术==来实现 HTTP设计者早在之前就考虑到了这点 因此"),v("strong",[t._v("HTTP协议的头部有不少是针对缓存的字段")])]),t._v(" "),v("h4",{attrs:{id:"缓存技术实现细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存技术实现细节"}},[t._v("#")]),t._v(" 缓存技术实现细节")]),t._v(" "),v("p",[t._v("再来刨根问底一下 缓存是如何做到的呢？")]),t._v(" "),v("blockquote",[v("p",[t._v("【1】客户端会把"),v("strong",[t._v("第一次请求以及相应的数据保存在本地磁盘上")])]),t._v(" "),v("p",[t._v("其中将请求的URL作为key 而响应作为value 两者形成映射关系 "),v("strong",[t._v("URL->响应")])]),t._v(" "),v("p",[t._v("这样 当后续发起相同的请求时 就可以先在本地磁盘上通过key查到对应的value 也就是响应 （前提：资源没有过期）"),v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202201150051848.png",alt:"image-20210810095837315"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202201150051236.png",alt:"image-20210810095923121"}})])]),t._v(" "),v("h4",{attrs:{id:"更新缓存的资源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#更新缓存的资源"}},[t._v("#")]),t._v(" 更新缓存的资源")]),t._v(" "),v("p",[t._v("看到这里 新的问题又会出现了——")]),t._v(" "),v("p",[t._v("万一"),v("strong",[t._v("缓存的响应不是最新的")]),t._v("，而客户端并不知情 那么该怎么办呢？")]),t._v(" "),v("p",[t._v("这个问题HTTP的设计者也早已考虑到了~")]),t._v(" "),v("blockquote",[v("p",[t._v("服务器在发送HTTP响应时 会"),v("strong",[t._v("估算一个过期的时间")]),t._v(" 并把这个信息放到响应头部中——")]),t._v(" "),v("p",[t._v("这样客户端在"),v("strong",[t._v("查看响应头部的信息时，【2】一旦发现缓存的响应是过期的，则就会重新发送网络请求")]),t._v("。（强缓存命中则直接使用本地资源的副本。如果不命中则根据头信息向服务器发起请求，使用协商缓存，也就是接下来的【3】）")])]),t._v(" "),v("p",[t._v("HTTP关于缓存说明的头部字段很多~这部分内容之后再仔细研究下 暂时不再拓展了")]),t._v(" "),v("h4",{attrs:{id:"更新缓存资源细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#更新缓存资源细节"}},[t._v("#")]),t._v(" 更新缓存资源细节")]),t._v(" "),v("p",[t._v("最后再来思考一个问题——")]),t._v(" "),v("blockquote",[v("p",[t._v("如果客户端从第⼀次请求得到的响应头部中发现该响应过期了，客户端重新发送请求，假设服务器上的资源并没有 变更，还是⽼样⼦，那么你觉得还要在服务器的响应带上这个资源吗？")]),t._v(" "),v("p",[t._v("很显然不带的话，可以提⾼ HTTP 协议的性能，那具体如何做到呢？")])]),t._v(" "),v("p",[t._v("是啊 如果在重新发送请求的时候发现资源并没有变更 那么服务器在响应的时候应该返回什么资源呢？")]),t._v(" "),v("blockquote",[v("p",[t._v("【3】这个就需要我们在客户端重新发送请求时 "),v("strong",[t._v("在请求的 "),v("code",[t._v("Etag")]),t._v(" 头部带上第一次请求的响应头部中的摘要")]),t._v("，这个"),v("u",[t._v("摘要是唯一标识响应的资源")]),t._v("，当服务器收到请求后 会将本地资源的摘要（也就是最新的摘要） 与 请求中的摘要（缓存中的摘要）做个比较——")]),t._v(" "),v("ul",[v("li",[t._v("如果不同 说明客户端的缓存（URL->响应）已经没有价值 服务器将在响应中带上最新的资源。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"D:%5CAA_Web_Front-end_Development%5C%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%5C%E8%AE%A1%E7%BD%91%5C%E8%AE%A1%E7%BD%91%E5%AD%A6%E4%B9%A0.assets%5Cimage-20210810101411121.png",alt:"image-20210810101411121"}})]),t._v(" "),v("ul",[v("li",[t._v("如果相同 说明客户端的缓存还是可以继续使用的 那么服务器"),v("strong",[t._v("仅返回不含有包体的 "),v("code",[t._v("304 Not Modified")]),t._v(" 响应")]),t._v(" 来告诉客户端“缓存的资源仍然有效哦！” 这样可以减少响应资源在网络中传输的延时！\n"),v("ul",[v("li",[t._v("==协商缓存==")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"D:%5CAA_Web_Front-end_Development%5C%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%5C%E8%AE%A1%E7%BD%91%5C%E8%AE%A1%E7%BD%91%E5%AD%A6%E4%B9%A0.assets%5Cimage-20210810101704953.png",alt:"image-20210810101704953"}})])]),t._v(" "),v("p",[t._v("通过本个问题 - “如何避免发送HTTP请求” 对4个小点的研究")]),t._v(" "),v("p",[t._v("我们发现每一个点都包含了“缓存”")]),t._v(" "),v("p",[t._v("可以看出来 缓存真的是性能优化的一把万能钥匙！")]),t._v(" "),v("p",[t._v("小到 CPU Cache、Page Cache、Redis Cache")]),t._v(" "),v("p",[t._v("大到HTTP协议的缓存~")]),t._v(" "),v("h3",{attrs:{id:"队头阻塞问题-http1-1-2-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#队头阻塞问题-http1-1-2-3"}},[t._v("#")]),t._v(" 队头阻塞问题-HTTP1.1/2/3")]),t._v(" "),v("blockquote",[v("p",[t._v("【1】HTTP1.1的问题在于管道化 http请求都是在pipeline里进行传输 虽然可以将多条请求放入请求队列 但是服务器响应时只会响应一个请求")]),t._v(" "),v("p",[t._v("【2】HTTP2的问题主要是因为TCP重传这个机制")]),t._v(" "),v("p",[t._v("【3】所以想改善HTTP2的TCP队头阻塞问题，只能换网络协议——换成UDP 就ok了——HTTP3的内容")])]),t._v(" "),v("ul",[v("li",[t._v("【1】HTTP 1.1的队头阻塞问题 —— ==HTTP队头阻塞==\n"),v("ul",[v("li",[t._v("存在问题——HTTP管道化")])])])]),t._v(" "),v("p",[v("strong",[t._v("HTTP管道化")]),t._v("（在响应到达之前，可以将多条请求放入队列，当第一条请求发往服务器的时候，第二第三条请求也可以开始发送了 "),v("strong",[t._v("要求FIFO")]),t._v("）要求服务端必须"),v("strong",[t._v("按照请求发送的顺序返回响应")]),t._v("，那如果一个响应返回延迟了，那么其后续的响应都会被延迟（如下图）")]),t._v(" "),v("blockquote",[v("p",[t._v("HTTP/1.1 中的管道（ pipeline）传输中"),v("strong",[t._v("如果有⼀个请求阻塞了，那么队列后请求也统统被阻塞住了")]),t._v("  —— 《图解网络》")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202112141218170.png",alt:"image-20211214121811091"}})]),t._v(" "),v("ul",[v("li",[t._v("HTTP2通过多路复用解决1.1中的队头阻塞问题 —— ==TCP队头阻塞==\n"),v("ul",[v("li",[t._v("存在问题——如果丢包会触发TCP"),v("strong",[t._v("重传")]),t._v("机制，所有http请求都要等着那个丢包被"),v("strong",[t._v("重传")]),t._v("回来")])])])]),t._v(" "),v("p",[v("strong",[t._v("移除了 HTTP/1.1 中的请求")]),t._v("，服务端不需要按照FIFO的顺序返回响应，而是可以并发地返回响应！")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202112141214162.png",alt:"image-20211214121440057"}})]),t._v(" "),v("p",[t._v("但是这种情况可能产生TCP队头阻塞")]),t._v(" "),v("blockquote",[v("p",[t._v("HTTP/2 "),v("strong",[t._v("多个HTTP请求复⽤⼀个TCP连接")]),t._v("，⼀旦==发⽣丢包==，就会触发TCP的重传机制，"),v("strong",[t._v("阻塞住所有的 HTTP 请求")]),t._v("。这样在⼀个 TCP 连接中的"),v("strong",[t._v("所有的 HTTP 请求都必须等待这个丢了的包被重传回来")]),t._v("。  ——《图解网络》")])]),t._v(" "),v("ul",[v("li",[t._v("HTTP3把 HTTP 下层的 TCP 协议改成了 "),v("strong",[t._v("UDP")])])]),t._v(" "),v("p",[t._v("UDP 发⽣是"),v("strong",[t._v("不管顺序，也不管丢包的")]),t._v("，所以不会出现 HTTP/1.1 的==队头阻塞== 和 HTTP/2 的==⼀个丢包全部重传问题==")]),t._v(" "),v("h3",{attrs:{id:"http-超文本传输协-基础概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-超文本传输协-基础概念"}},[t._v("#")]),t._v(" HTTP-超文本传输协-基础概念")]),t._v(" "),v("blockquote",[v("p",[t._v("《图解网络》")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("“聊聊"),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("\n\t"),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("是啥嘞\n    详细解释下“超文本传输协议呗”\n    "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("是只用于服务器传客户端嘛？\n    "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("常见的状态码 说几个\n    "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("常见的字段 说几个”\n")])])]),v("h4",{attrs:{id:"_1-http是啥"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http是啥"}},[t._v("#")]),t._v(" 1.HTTP是啥？")]),t._v(" "),v("p",[v("strong",[t._v("超文本传输协议")])]),t._v(" "),v("p",[v("code",[t._v("HyperText Transfer Protocol")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("HTTP基于TCP/IP 是关于数据如何在万维网中通信的协议")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("HTTP的底层是TCP/IP")])])]),t._v(" "),v("li",[v("p",[t._v("用于传送 WWW 方式的数据")])])]),t._v(" "),v("h4",{attrs:{id:"_2-详细解释-超文本传输协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-详细解释-超文本传输协议"}},[t._v("#")]),t._v(" 2.详细解释“超文本传输协议”")]),t._v(" "),v("p",[t._v("分三部分来看——")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlU4cfNS4t8C0AjG8YleW3FjITV4h4aQNn1iboHhjALOGicsFsLuQAXwVaQ/640?wx_fmt=png",alt:"img"}})]),t._v(" "),v("p",[t._v("（很基础了！）")]),t._v(" "),v("ul",[v("li",[t._v("协议")])]),t._v(" "),v("p",[v("strong",[t._v("协")]),t._v(" 要求由两个以上的参与者")]),t._v(" "),v("p",[v("strong",[t._v("议")]),t._v(" 产生对参与者的一种"),v("strong",[t._v("行为约定和规范")])]),t._v(" "),v("p",[t._v("对于用在计算机世界中的HTTP协议")]),t._v(" "),v("p",[t._v("它使用计算机能够理解的语言确立了一种")]),t._v(" "),v("p",[t._v("【1】计算机之间交流通信的规范（”协“）")]),t._v(" "),v("p",[t._v("【2】交流通信相关的各种 控制&错误处理 方式（”议“）")]),t._v(" "),v("ul",[v("li",[t._v("传输")])]),t._v(" "),v("p",[t._v("注意 HTTP协议是一个 "),v("strong",[t._v("双向协议")])]),t._v(" "),v("p",[t._v("双向协议：客户端可以发送请求到服务端 服务端也可以把请求数据发送到客户端")]),t._v(" "),v("p",[t._v("同时 也要注意 —— 数据在我们看来是在两点之间传递 但是允许中间由中转/接力")]),t._v(" "),v("blockquote",[v("p",[t._v("举个例子 第一排的同学传递小纸条到后排同学时 需要经过好多同学")])]),t._v(" "),v("p",[t._v("在HTTP中 中间人只要遵循 HTTP协议 并在不打扰基本数据传输的前提下 就可以添加额外的内容")]),t._v(" "),v("p",[t._v("到这里 可以给HTTP协议下一个更加贴切的定义了（加上”两点之间双向传输“这个概念）")]),t._v(" "),v("blockquote",[v("p",[t._v("HTTP协议是一个在计算机世界中专门用来在==两点之间传输数据==的约定和规范")])]),t._v(" "),v("ul",[v("li",[t._v("超文本")])]),t._v(" "),v("p",[v("strong",[t._v("超越了普通文本的文本")]),t._v(" 文字、图片、视频、超链接的混合体")]),t._v(" "),v("p",[t._v("HTML就是常见的超文本 可以通过超链接实现跳转 另外 是一个有文字、有画面视频的丰富的网页")]),t._v(" "),v("ul",[v("li",[t._v("小结 超文本传输协议 确切一些的定义")])]),t._v(" "),v("p",[t._v("记住几个点——”协议——约定和规范“ ”传输——在两点之间“ ”超文本——传输的内容（文字、图片、音视频“")]),t._v(" "),v("p",[v("strong",[t._v("超文本传输协议")]),t._v("是")]),t._v(" "),v("blockquote",[v("p",[t._v("一个在计算机世界里==专门在**「两点」"),v("strong",[t._v("之间")]),t._v("「传输」"),v("strong",[t._v("文字、图片、音视频等")]),t._v("「超文本」"),v("strong",[t._v("数据的")]),t._v("「约定和规范」**==")])]),t._v(" "),v("h4",{attrs:{id:"_3-http只能用于-服务端与客户端之间-传输超文本-正确嘛"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-http只能用于-服务端与客户端之间-传输超文本-正确嘛"}},[t._v("#")]),t._v(" 3.HTTP只能用于 服务端与客户端之间 传输超文本？正确嘛？")]),t._v(" "),v("ul",[v("li",[t._v("不正确")]),t._v(" "),v("li",[t._v("还可以用于 "),v("strong",[t._v("从服务器传输超文本数据到服务器")])])]),t._v(" "),v("blockquote",[v("p",[t._v("所以 HTTP协议 的描述 要这么说——”采用==两点之间==传输超文本“")])]),t._v(" "),v("h4",{attrs:{id:"_4-http常见的状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-http常见的状态码"}},[t._v("#")]),t._v(" 4.HTTP常见的状态码")]),t._v(" "),v("p",[t._v("这里就顺着说就行了——（举一些常见的例子）")]),t._v(" "),v("ul",[v("li",[t._v("成功的报文")]),t._v(" "),v("li",[t._v("重定向的报文\n"),v("ul",[v("li",[t._v("请求资源没了 301")]),t._v(" "),v("li",[t._v("请求资源还有  但是要换个URL 302")])])]),t._v(" "),v("li",[t._v("客户端错误\n"),v("ul",[v("li",[t._v("服务器禁止访问 403 Forbidden")]),t._v(" "),v("li",[t._v("服务器上不存在 / 没找到 404 Not Found")])])]),t._v(" "),v("li",[t._v("服务器错误\n"),v("ul",[v("li",[t._v("访问后端服务器发生错误 502 Bad Gateway")]),t._v(" "),v("li",[t._v("服务器正忙 暂时无法响应 503 Service Unavailable")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlUfV6qkzg4yHtOibAfTv6hTicOx73F55WWl4nW2FWlXnDJ7Igd9kvrrRnA/640?wx_fmt=png",alt:"img"}})]),t._v(" "),v("p",[t._v("先说说总览")]),t._v(" "),v("ul",[v("li",[t._v("1xx 提示信息")])]),t._v(" "),v("p",[t._v("协议处理中的一种中间状态 很少用")]),t._v(" "),v("ul",[v("li",[t._v("2xx 成功处理请求\n"),v("ul",[v("li",[t._v("「"),v("strong",[t._v("200 OK")]),t._v("」 最常见的成功状态码 一切正常！")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("204 No Content")]),t._v("」  也是很常见的成功状态码 （区别：响应头没有body数据）")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("206 Partial Content")]),t._v("」是应用于 HTTP 分块下载或断电续传。")])])])]),t._v(" "),v("p",[t._v("表示**==服务器==成功处理了"),v("strong",[t._v("客户端的")]),t._v("请求**")]),t._v(" "),v("ul",[v("li",[t._v("3xx 重定向请求\n"),v("ul",[v("li",[t._v("「"),v("strong",[t._v("301 Moved Permanently")]),t._v("」表示永久重定向，说明请求的资源已经不存在了")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("302 Moved Temporarily")]),t._v("」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("304 Not Modified")]),t._v("」不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，用于缓存控制。")])])])]),t._v(" "),v("p",[t._v("表示客户端请求的==资源==发生了==变动==，"),v("strong",[t._v("需要客户端用新的 URL 重新发送请求获取资源")]),t._v("，也就是"),v("strong",[t._v("重定向")]),t._v("。")]),t._v(" "),v("ul",[v("li",[t._v("4xx 客户端错误\n"),v("ul",[v("li",[t._v("「"),v("strong",[t._v("400 Bad Request")]),t._v("」表示客户端请求的报文有错误，但只是个"),v("strong",[t._v("笼统的错误")]),t._v("。\n"),v("ul",[v("li",[t._v("「"),v("strong",[t._v("403 Forbidden")]),t._v("」表示"),v("strong",[t._v("服务器禁止访问资源")]),t._v("，并不是客户端的请求出错。")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("404 Not Found")]),t._v("」表示请求的资源"),v("strong",[t._v("在服务器上不存在或未找到")]),t._v("，所以无法提供给客户端。")])])])])])]),t._v(" "),v("p",[t._v("表示==客户端==发送的"),v("strong",[t._v("报文有误")]),t._v("，服务器无法处理，也就是错误码的含义。")]),t._v(" "),v("ul",[v("li",[t._v("5xx 服务器错误\n"),v("ul",[v("li",[t._v("「"),v("strong",[t._v("500 Internal Server Error")]),t._v("」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。\n"),v("ul",[v("li",[t._v("「"),v("strong",[t._v("501 Not Implemented")]),t._v("」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("502 Bad Gateway")]),t._v("」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。")]),t._v(" "),v("li",[t._v("「"),v("strong",[t._v("503 Service Unavailable")]),t._v("」表示服务器当前"),v("strong",[t._v("很忙，暂时无法响应服务器")]),t._v("，类似“网络服务正忙，请稍后重试”的意思。")])])])])])]),t._v(" "),v("p",[t._v("表示客户端请求报文正确，但是**==服务器处理时==内部==发生了错误==**，属于服务器端的错误码。")]),t._v(" "),v("h4",{attrs:{id:"_5-http常见字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-http常见字段"}},[t._v("#")]),t._v(" 5.HTTP常见字段")]),t._v(" "),v("p",[t._v("==常见字段这里还需要多看些文章学习下！==")]),t._v(" "),v("p",[t._v("HTTP包从应用层被发出（自带HTTP头部） 经过传输层、网络层、链路层之后会加上")]),t._v(" "),v("p",[t._v("TCP头部 IP头部 MAC头部")]),t._v(" "),v("p",[t._v("这些头部中的字段帮助数据包抵达服务端~")]),t._v(" "),v("p",[t._v("HTTP协议的头域包括 "),v("code",[t._v("通用头，请求头，响应头和实体头")]),t._v(" 四个部分。")]),t._v(" "),v("ul",[v("li",[t._v("每个头域由一个域名，冒号（:）和域值三部分组成。")])]),t._v(" "),v("p",[t._v("【1】Host")]),t._v(" "),v("p",[t._v("客户端发送请求时 用来指定服务器的域名")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlU6aoJZ8ROGvuttxDGXYnKXgzDdOBXibKpZVoqhkArdZ3QvMBBDaLONkw/640?wx_fmt=jpeg",alt:"img"}})]),t._v(" "),v("p",[t._v("通过Host字段 将请求发往"),v("strong",[t._v("同一台服务器上的不同网站")])]),t._v(" "),v("p",[t._v("【2】Content-Length")]),t._v(" "),v("p",[t._v("服务器在返回数据时，会有 "),v("code",[t._v("Content-Length")]),t._v(" 字段，表明本次回应的数据长度。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlU79Ir1qmS5DMj7XLLibaibsbUEUN5JyB2ugmEHcxwIe7JBkBHM99XQp3g/640?wx_fmt=jpeg",alt:"img"}})]),t._v(" "),v("p",[t._v("【3】Connection")]),t._v(" "),v("p",[t._v("最常用于客户端要求服务器使用 TCP 持久连接，以便其他请求复用。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlUlhrVicZt4iaLPPibcD8KQV4z9vqwAaAjdtkjUo5fGlKOsTaicbtEDO4u1Q/640?wx_fmt=jpeg",alt:"image"}})]),t._v(" "),v("p",[t._v("HTTP/1.1 版本的默认连接都是持久连接，但为了兼容老版本的 HTTP，需要指定 "),v("code",[t._v("Connection")]),t._v(" 首部字段的值为 "),v("code",[t._v("Keep-Alive")]),t._v("。")]),t._v(" "),v("p",[t._v("一个==可以复用的 TCP 连接就这样建立了，直到客户端或服务器主动关闭连接==。")]),t._v(" "),v("p",[t._v("但是，这不是标准字段（是因为用于兼顾老版本么？这里说得不很清楚）。")]),t._v(" "),v("p",[t._v("【4】Content-Type")]),t._v(" "),v("p",[t._v("用于服务器回应时，告诉客户端，本次数据是什么格式。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlUPPfeuboYtO6sBBQw5JI76dSrAoNlvjs2TysKiaPyVGHrtjFJiblIhfNQ/640?wx_fmt=jpeg",alt:"img"}})]),t._v(" "),v("p",[t._v("上面的类型表明，发送的是网页，而且编码是UTF-8。")]),t._v(" "),v("p",[t._v("这里在html后缀文件中经常看到~")]),t._v(" "),v("p",[t._v("【5】Content-Encoding")]),t._v(" "),v("p",[t._v("说明数据的压缩方法。表示服务器返回的数据使用了什么压缩格式")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/J0g14CUwaZfXG1113Sjm0iaOXfoOv0tlUn83Xqku5tIB6zNdHsnFH08xfURlVHdtGQiaYfF21ib3koxICwrwRnckg/640?wx_fmt=jpeg",alt:"img"}})]),t._v(" "),v("p",[t._v("上面表示服务器返回的数据采用了 gzip 方式压缩，告知客户端需要用此方式解压。")]),t._v(" "),v("p",[t._v("同时 客户端在请求时，用 "),v("code",[t._v("Accept-Encoding")]),t._v(" 字段说明自己可以"),v("strong",[t._v("接受哪些压缩方法")]),t._v("。")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("Accept-Encoding: gzip, deflate\n")])])]),v("h3",{attrs:{id:"来聊聊get-post"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#来聊聊get-post"}},[t._v("#")]),t._v(" 来聊聊GET POST")]),t._v(" "),v("blockquote",[v("p",[t._v("图解网络")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("“来聊聊"),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),t._v("\n\t"),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),t._v(" 的区别\n    这俩方法都是安全和幂等的嘛？”\n")])])]),v("h4",{attrs:{id:"_1-get-post的区别-edition1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-get-post的区别-edition1"}},[t._v("#")]),t._v(" 1.GET POST的区别-edition1")]),t._v(" "),v("blockquote",[v("p",[t._v("《图解网络》")])]),t._v(" "),v("p",[t._v("简单来说")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("一个是发请求给服务器来要资源（GET）")])]),t._v(" "),v("li",[v("p",[t._v("一个是发请求给服务器来给服务器提交数据（POST）")])])]),t._v(" "),v("p",[t._v("与POST恰好相反 一个是索取 一个是给予~")]),t._v(" "),v("p",[t._v("具体来说一下")]),t._v(" "),v("ul",[v("li",[t._v("Get ⽅法的含义是请求从服务器获取资源。这个资源可以是静态的⽂本、⻚⾯、图⽚视频等。")])]),t._v(" "),v("blockquote",[v("p",[t._v("⽐如，你打开浏览器上的一篇文章，浏览器就会发送 GET 请求给服务器，服务器就会返回⽂章的所有⽂字及资源")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/9b009d37f2f546c6a956b63ea09bbd6d.png",alt:"请添加图片描述"}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("⽽ POST ⽅法则是相反操作，它向 URI 指定的资源提交数据，数据就放在报⽂的 body ⾥。")]),t._v(" "),v("blockquote",[v("p",[t._v("URI，统一资源标志符(Uniform Resource Identifier， URI)")]),t._v(" "),v("p",[v("em",[t._v("URL")]),t._v("一般指统一资源定位系统（uniform resource locator;"),v("em",[t._v("URL")]),t._v("）")]),t._v(" "),v("p",[t._v("表示的是web上每一种可用的资源，如 HTML文档、图像、视频片段、程序等都由一个URI进行标识的")])]),t._v(" "),v("blockquote",[v("p",[t._v("⽐如，你在小林的公众号中的⽂章底部敲⼊了留⾔后点击「提交」，浏览器就会执⾏⼀次 POST 请求，把你的 留⾔⽂字放进了报⽂ body ⾥，然后拼接好 POST 请求头，通过 TCP 协议发送给服务器")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/645caf7a0bdb435284b6177916807ae0.png",alt:"请添加图片描述"}})]),t._v(" "),v("h4",{attrs:{id:"_1-get-post的区别-edition2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-get-post的区别-edition2"}},[t._v("#")]),t._v(" 1.GET POST的区别-edition2")]),t._v(" "),v("blockquote",[v("p",[t._v("更详尽的内容")])]),t._v(" "),v("p",[t._v("Post 和 Get 是 HTTP 请求的两种方法，其区别如下：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("应用场景："),v("strong",[t._v("GET 请求是一个幂等的请求，一般 Get 请求用于对服务器资源不会产生影响的场景，比如说")]),t._v("请求一个网页的资源")]),t._v("。而 Post 不是一个幂等的请求，一般用于对服务器资源会产生影响的情景，比如"),v("strong",[t._v("注册用户，提交信息这一类")]),t._v("的操作。")]),t._v(" "),v("li",[t._v("**是否缓存：**因为两者应用场景不同，浏览器一般会对 Get 请求缓存，但很少对 Post 请求缓存。")]),t._v(" "),v("li",[t._v("**发送的报文格式：**Get 请求的报文中实体部分为空，Post 请求的报文中实体部分一般为向服务器发送的数据。")]),t._v(" "),v("li",[t._v("**安全性：**Get 请求可以将请求的参数放入 url 中向服务器发送，这样的做法相对于 Post 请求来说是不太安全的，因为请求的 url 会被保留在历史记录中。")]),t._v(" "),v("li",[t._v("**请求长度：**浏览器由于对 url 长度的限制，所以会影响 get 请求发送数据时的长度。这个限制是浏览器规定的，并不是 RFC 规定的。")]),t._v(" "),v("li",[t._v("**参数类型：**post 的参数传递支持更多的数据类型。")])]),t._v(" "),v("h4",{attrs:{id:"_2-这俩方法都是安全和幂等的嘛"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-这俩方法都是安全和幂等的嘛"}},[t._v("#")]),t._v(" 2.这俩方法都是安全和幂等的嘛？")]),t._v(" "),v("blockquote",[v("p",[t._v("先说明下安全和幂等的概念：")]),t._v(" "),v("ul",[v("li",[t._v("在 HTTP 协议⾥，所谓的「安全」是指请求⽅法"),v("strong",[t._v("不会「破坏」服务器上的资源")]),t._v("。")]),t._v(" "),v("li",[t._v("所谓的「幂等」，意思是"),v("strong",[t._v("多次执行相同的操作，结果都是「相同」的")]),t._v("。（和执行一次一样）")])])]),t._v(" "),v("p",[t._v("根据上面对两个方法的了解——")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("很明显 GET ⽅法就是安全且==幂等==的，因为它是「只读」操作，⽆论操作多少次，服务器上的数据都是=="),v("strong",[t._v("安全")]),t._v("==的，且每次的结果都是"),v("strong",[t._v("相同")]),t._v("的")])]),t._v(" "),v("li",[v("p",[t._v("POST 因为是「新增或提交数据」的操作，会修改服务器上的资源，所以是==不安全的==，且多次提交数据就会创建多个资源，所以==不是幂等的==")])])]),t._v(" "),v("h2",{attrs:{id:"https相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https相关"}},[t._v("#")]),t._v(" HTTPS相关")]),t._v(" "),v("blockquote",[v("p",[t._v("《图解HTTP》")]),t._v(" "),v("h4",{attrs:{id:"浏览器灵魂之问-第9篇-https为什么让数据传输更安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器灵魂之问-第9篇-https为什么让数据传输更安全"}},[t._v("#")]),t._v(" "),v("a",{attrs:{href:"https://juejin.cn/post/6844904021308735502#heading-84",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器灵魂之问 第9篇:HTTPS为什么让数据传输更安全？"),v("OutboundLink")],1)])]),t._v(" "),v("h3",{attrs:{id:"对称加密-非对称加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对称加密-非对称加密"}},[t._v("#")]),t._v(" 对称加密 & 非对称加密")]),t._v(" "),v("ul",[v("li",[t._v("对称加密（也叫共享密钥加密）\n"),v("ul",[v("li",[t._v("不安全！")]),t._v(" "),v("li",[t._v("处理速度较快")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111238602.png",alt:"image-20211111123822391"}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("非对称加密（也叫公开密钥加密）")]),t._v(" "),v("ul",[v("li",[t._v("更加安全（缺点是公开密钥可能被替换，所以使用下面提到的数字证书）")]),t._v(" "),v("li",[t._v("处理速度较慢")])]),t._v(" "),v("blockquote",[v("p",[t._v("非对称加密~（下面那里写错了哈哈）")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111238559.png",alt:"image-20211111123856422"}})]),t._v(" "),v("h3",{attrs:{id:"https的混合加密机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https的混合加密机制"}},[t._v("#")]),t._v(" HTTPS的混合加密机制")]),t._v(" "),v("p",[t._v("对称加密+非对称加密")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111235564.png",alt:"image-20211111123546328"}})]),t._v(" "),v("h3",{attrs:{id:"可以证明公开密钥正确性的证书-数字证书"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可以证明公开密钥正确性的证书-数字证书"}},[t._v("#")]),t._v(" 可以证明公开密钥正确性的证书-数字证书")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111234902.png",alt:"image-20211111123455666"}})]),t._v(" "),v("h3",{attrs:{id:"https的通信机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https的通信机制"}},[t._v("#")]),t._v(" HTTPS的通信机制")]),t._v(" "),v("blockquote",[v("p",[t._v("有点长啊这个！图解HTTP中一共是给出了12步~")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111244776.png",alt:"image-20211111124406509"}})]),t._v(" "),v("p",[t._v("下面的内容当作一个了解吧~实际应用中/题目中遇到了再来看看")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111243609.png",alt:"image-20211111124320356"}})]),t._v(" "),v("h3",{attrs:{id:"ssh在git中的作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ssh在git中的作用"}},[t._v("#")]),t._v(" SSH在git中的作用")]),t._v(" "),v("p",[t._v("SSH是一种协议标准,其目的是实现"),v("strong",[t._v("安全远程登录")]),t._v("以及其它"),v("strong",[t._v("安全网络服务")]),t._v(".")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("SSH(Secure Shell)")]),t._v("仅仅是一个"),v("strong",[t._v("协议标准")]),t._v(" ,其具体的实现有很多,既有开源实现的OpenSSH,也有商业实现方案.使用范围最广泛的当然是开源实现OpenSSH.")])]),t._v(" "),v("p",[t._v("如何实现数据的安全呢？首先想到的实现方案肯定是对数据进行加密.加密的方式主要有两种:")]),t._v(" "),v("ol",[v("li",[t._v("对称加密（也称为秘钥加密）")]),t._v(" "),v("li",[t._v("非对称加密（也称公钥加密）")])]),t._v(" "),v("p",[t._v("非对称加密")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9818632-8b02afc463f47a89.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("1.远程Server收到Client端用户TopGun的登录请求，"),v("strong",[t._v("Server把自己的公钥发给用户.")])]),t._v(" "),v("p",[t._v("2.Client使用这个公钥,将密码进行加密.")]),t._v(" "),v("p",[t._v("3.Client将加密的密码发送给Server端.")]),t._v(" "),v("p",[t._v("4.远程Server用自己的私钥,解密登录密码,然后验证其合法性.")]),t._v(" "),v("p",[t._v("5.若验证结果正确,给Client相应的响应.")]),t._v(" "),v("p",[t._v("可能出现的安全问题，中间人攻击——")]),t._v(" "),v("blockquote",[v("p",[t._v("Client端不能保证接受到的公钥就是目标Server端的,如果一个攻击者中途拦截Client的登录请求,向其发送自己的公钥,Client端"),v("strong",[t._v("用攻击者的公钥进行数据加密")]),t._v(".攻击者接收到加密信息后"),v("strong",[t._v("再用自己的私钥进行解密")]),t._v(",不就窃取了Client的登录信息了吗？这就是所谓的"),v("em",[t._v("中间人攻击")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9818632-0c6da2b6e1346e7f.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("SSH的作用 在非对称加密中 （帮助客户端）"),v("strong",[t._v("对服务端的公钥进行认证")])]),t._v(" "),v("ul",[v("li",[t._v("在https中可以通过CA来进行公证,可是SSH的publish key和private key都是自己生成的,没法公证.只能通过Client端自己对公钥进行确认")])]),t._v(" "),v("p",[t._v("SSH基于公钥进行认证的方式——")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9818632-53cf70110d87cfbc.jpg",alt:"img"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202201200956946.png",alt:"image-20220120095656824"}})]),t._v(" "),v("p",[t._v("作者：shuaiutopia\n链接：https://www.jianshu.com/p/cab7e436a7aa\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")]),t._v(" "),v("blockquote",[v("p",[t._v("下面是面试过程中遇到比较典型的一个问题~")])]),t._v(" "),v("h3",{attrs:{id:"【面试】https的一个传输过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#【面试】https的一个传输过程"}},[t._v("#")]),t._v(" 【面试】HTTPS的一个传输过程")]),t._v(" "),v("blockquote",[v("p",[t._v("21年十一月字节一面时问到的内容")])]),t._v(" "),v("ul",[v("li",[t._v("非对称加密建立HTTPS连接")]),t._v(" "),v("li",[t._v("然后使用对称加密进行报文的收发")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111235564.png",alt:"image-20211111123546328"}})]),t._v(" "),v("h5",{attrs:{id:"追问-说一下非对称加密是如何利用公钥私钥解决安全问题的-之前第一问里有挖坑"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#追问-说一下非对称加密是如何利用公钥私钥解决安全问题的-之前第一问里有挖坑"}},[t._v("#")]),t._v(" 追问-说一下非对称加密是如何利用公钥私钥解决安全问题的（之前第一问里有挖坑）")]),t._v(" "),v("p",[t._v("当时答得有点乱，下来整理了一下，感觉清晰不少~")]),t._v(" "),v("blockquote",[v("p",[t._v("另外搜索非对称算法时，网上好多文章没说的一点就是这个非对称算法是用来干啥的，根据图解HTTP的内容，我的理解是以下几个步骤：")]),t._v(" "),v("ul",[v("li",[t._v("【1】客户端有私钥A + 公钥A； 服务器有私钥B + 公钥B")]),t._v(" "),v("li",[t._v("【2】规则——私钥A+公钥A = 密钥对A（公钥A加密的内容只有私钥A可以解密！）")]),t._v(" "),v("li",[t._v("【3】为了建立安全的通信道路（不被坏人篡改、冒名顶替（窃听就木有办法辣，不过也不怕！我们这个是非对称加密！被窃听了也不会被破解的）），客户端把手里的公钥发送给服务器")]),t._v(" "),v("li",[t._v("【4】服务器使用拿到的公钥A进行"),v("strong",[t._v("重要报文")]),t._v("（也就是图解HTTP提到的 “"),v("strong",[t._v("稍后的共享密钥加密中要使用的密钥")]),t._v("”）的加密，之后再发给客户端")]),t._v(" "),v("li",[t._v("【5】客户端手里有私钥A，直接解密这个"),v("strong",[t._v("重要报文")]),t._v("，安全地获得共享密钥！妙啊！")])]),t._v(" "),v("p",[t._v("这样互联网上的不法分子就没辙辣！")]),t._v(" "),v("blockquote",[v("p",[t._v("另外还可以使用数字证书解决公开密钥的传输问题 - 图解HTTP很香啊！")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111111234902.png",alt:"image-20211111123455666"}})])])]),t._v(" "),v("h2",{attrs:{id:"我们访问一个网页的大致过程-前后端交互过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#我们访问一个网页的大致过程-前后端交互过程"}},[t._v("#")]),t._v(" 我们访问一个网页的大致过程 前后端交互过程")]),t._v(" "),v("blockquote",[v("p",[t._v("这个问题是从cookie 的 domain字段的内容引起的！")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111082005281.png",alt:"image-20211108200508226"}})]),t._v(" "),v("p",[t._v("很奇怪这个domain中的“域名”到底是前端服务器的域名还是后端服务器的域名呢？")]),t._v(" "),v("p",[t._v("为啥前端服务器还要个域名呢？")]),t._v(" "),v("p",[t._v("搜素了资料，进行学习")])]),t._v(" "),v("ul",[v("li",[t._v("前后端交互的过程——\n"),v("ul",[v("li",[t._v("cookie生成的时间点")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111082001427.png",alt:"image-20211108200124299"}})]),t._v(" "),v("ul",[v("li",[t._v("拓展下跨域的问题")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/su-fangzhou/blog-image/raw/master/202111082001136.png",alt:"image-20211108200133079"}})]),t._v(" "),v("h2",{attrs:{id:"输入网址到网页显示-期间发生了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入网址到网页显示-期间发生了什么"}},[t._v("#")]),t._v(" 输入网址到网页显示 期间发生了什么？")]),t._v(" "),v("blockquote",[v("p",[t._v("这个超级全面的考察问题，能挖多深就挖多深！")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6844904021308735502#heading-24",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器灵魂之问 第3篇: 说一说从输入URL到页面呈现发生了什么？"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6844904021308735502#heading-33",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器灵魂之问 第4篇: 说一说从输入URL到页面呈现发生了什么？——解析算法篇"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6844904021308735502#heading-46",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器灵魂之问 第5篇: 说一说从输入URL到页面呈现发生了什么？——渲染过程篇"),v("OutboundLink")],1)])]),t._v(" "),v("h2",{attrs:{id:"跨域cors问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#跨域cors问题"}},[t._v("#")]),t._v(" "),v("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域CORS问题"),v("OutboundLink")],1),t._v("？")]),t._v(" "),v("h3",{attrs:{id:"浏览器并不是拒绝所有的跨域请求-实际上拒绝的是跨域的读操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器并不是拒绝所有的跨域请求-实际上拒绝的是跨域的读操作"}},[t._v("#")]),t._v(" 浏览器并不是拒绝所有的跨域请求，实际上拒绝的是跨域的读操作")]),t._v(" "),v("p",[t._v("严格的说，浏览器并不是拒绝所有的跨域请求，实际上拒绝的是跨域的读操作。浏览器的同源限制策略是这样执行的：\n通常浏览器允许进行跨域写操作（Cross-origin writes），如链接，重定向；\n通常浏览器允许跨域资源嵌入（Cross-origin embedding），如 img、script 标签；\n通常浏览器不允许跨域读操作（Cross-origin reads）。")]),t._v(" "),v("blockquote",[v("p",[t._v("有个学弟问这块儿来着 找来阮大的文章读读学习一下")]),t._v(" "),v("p",[t._v("另外 MDN对"),v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享CORS的解释"),v("OutboundLink")],1)])]),t._v(" "),v("p",[t._v('CORS是一个W3C标准，全称是**"跨域资源共享"（Cross-origin resource sharing）**。')]),t._v(" "),v("p",[t._v("它允许浏览器向跨源服务器，发出"),v("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("XMLHttpRequest")]),v("OutboundLink")],1),t._v("请求，从而克服了AJAX只能"),v("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("同源"),v("OutboundLink")],1),t._v("使用的限制。")]),t._v(" "),v("p",[t._v("本文详细介绍CORS的内部机制。")]),t._v(" "),v("p",[t._v("CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。")]),t._v(" "),v("p",[t._v("浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求（确定是否同源的请求），但用户不会有感觉。")]),t._v(" "),v("p",[t._v("因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。")]),t._v(" "),v("h3",{attrs:{id:"简单请求、非简单请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单请求、非简单请求"}},[t._v("#")]),t._v(" 简单请求、非简单请求")]),t._v(" "),v("p",[t._v("浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。")]),t._v(" "),v("p",[t._v("只要同时满足以下两大条件，就属于简单请求。")]),t._v(" "),v("blockquote",[v("p",[t._v("（1) 请求方法是以下三种方法之一：")]),t._v(" "),v("ul",[v("li",[t._v("HEAD")]),t._v(" "),v("li",[t._v("GET")]),t._v(" "),v("li",[t._v("POST")])]),t._v(" "),v("p",[t._v("（2）HTTP的头信息不超出以下几种字段：")]),t._v(" "),v("ul",[v("li",[t._v("Accept")]),t._v(" "),v("li",[t._v("Accept-Language")]),t._v(" "),v("li",[t._v("Content-Language")]),t._v(" "),v("li",[t._v("Last-Event-ID")]),t._v(" "),v("li",[t._v("Content-Type：只限于三个值"),v("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),v("code",[t._v("multipart/form-data")]),t._v("、"),v("code",[t._v("text/plain")])])])]),t._v(" "),v("p",[t._v("凡是不同时满足上面两个条件，就属于非简单请求。")]),t._v(" "),v("h4",{attrs:{id:"简单请求的流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单请求的流程"}},[t._v("#")]),t._v(" 简单请求的流程")]),t._v(" "),v("p",[t._v("对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个"),v("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),v("p",[t._v("下面是一个例子，浏览器发现这次"),v("strong",[t._v("跨源AJAX请求是简单请求")]),t._v("，就自动在头信息之中，添加一个"),v("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),v("blockquote",[v("div",{staticClass:"language-http extra-class"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token request-line"}},[v("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/cors")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Origin")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("http://api.bob.com")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("api.alice.com")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept-Language")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("en-US")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("keep-alive")])]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token header"}},[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("User-Agent")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Mozilla/5.0...")])]),t._v("\n")])])])]),t._v(" "),v("p",[t._v("上面的头信息中，"),v("code",[t._v("Origin")]),t._v("字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。")]),t._v(" "),v("p",[t._v("如果"),v("code",[t._v("Origin")]),t._v("指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头信息"),v("strong",[t._v("没有包含")]),v("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段（详见下文），就知道出错了，从而抛出一个错误，被"),v("code",[t._v("XMLHttpRequest")]),t._v("的"),v("code",[t._v("onerror")]),t._v("回调函数捕获。注意，这种错误无法通过状态码识别，因为HTTP回应的状态码有可能是200。")]),t._v(" "),v("p",[t._v("如果"),v("code",[t._v("Origin")]),t._v("指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段，如下的123行")]),t._v(" "),v("blockquote",[v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("Access"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Origin"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://api.bob.com'")]),t._v(" \n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。")]),t._v("\nAccess"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Credentials"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" \n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该字段可选。它的值是一个布尔值，表示是否允许发送Cookie 设为true，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。")]),t._v("\nAccess"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Expose"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Headers"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FooBar  如果想拿到其他字段，就必须在这里面指定\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面的例子指定，getResponseHeader('FooBar')可以返回FooBar字段的值。")]),t._v("\nContent"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" text"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \ncharset"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),v("p",[t._v("上面的头信息之中，有三个与CORS请求相关的字段，都以"),v("code",[t._v("Access-Control-")]),t._v("开头。")]),t._v(" "),v("h3",{attrs:{id:"解决跨域的几种方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域的几种方式"}},[t._v("#")]),t._v(" 解决跨域的几种方式")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("JSONP 使用script标签向后台请求数据，只适用于get请求")])]),t._v(" "),v("li",[v("p",[t._v("CORS是让服务器端设置Access-Control-Allow-Origin（头部字段），这样浏览器就不会报跨域错误")])]),t._v(" "),v("li",[v("p",[t._v("反向代理，搭建一个自己的服务器，让自己的服务器请求数据，拿到数据之后再返回给我自己")])])]),t._v(" "),v("h2",{attrs:{id:"cookie-session"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cookie-session"}},[t._v("#")]),t._v(" Cookie&Session")]),t._v(" "),v("blockquote",[v("p",[v("a",{attrs:{href:"https://www.zhihu.com/question/19786827",target:"_blank",rel:"noopener noreferrer"}},[t._v("COOKIE和SESSION有什么区别？ - 知乎"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("ul",[v("li",[v("p",[t._v("Session是在服务端保存的一个数据结构，用来"),v("strong",[t._v("跟踪用户的状态")]),t._v("，这个数据可以保存在集群、数据库、文件中；")]),t._v(" "),v("ul",[v("li",[t._v("用户验证这种场合一般会用 session")])])]),t._v(" "),v("li",[v("p",[t._v("Cookie是客户端保存用户信息的一种机制，用来"),v("strong",[t._v("记录用户的一些信息")]),t._v("，也是"),v("strong",[t._v("实现Session的一种方式")]),t._v("。")]),t._v(" "),v("ul",[v("li",[t._v("session id 是存在 cookie 中")])])])])]),t._v(" "),v("h1",{attrs:{id:"操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),v("blockquote",[v("p",[t._v("简单的操作系统学习资料")]),t._v(" "),v("p",[t._v("前端er也要掌握的操作系统知识！https://zhuanlan.zhihu.com/p/268219780?msclkid=23e52f55ab7111ec98d5b55925f4d474")])])])}),[],!1,null,null,null);_.default=e.exports}}]);